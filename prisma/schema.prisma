// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum ENROLLMENT_STATUS {
    DRAFT
    CONTRACT_SENT
    PAID
}

enum WEEKDAY {
    SUNDAY
    MONDAY
    TUESDAY
    WEDNESDAY
    THURSDAY
    FRIDAY
    SATURDAY
}

enum COURSE {
    PIANO
    GUIATAR
    UKULELE
    DRUMS
    VIOLIN
    CELLO
    CALRINET
    EARLY_CHILDHOOD
}

enum TAG {
    LESSONS
    TODDLER
    SOBO
    PPAM
    CURRENT
}

enum Status {
    RECEIVED
    SENT
    PENDING
}

// TODO: Remove
model Post {
    id        Int      @id @default(autoincrement())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([name])
}

model TagPerson {
    id        String   @id @default(cuid())
    tag       TAG
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Contact {
    id          String  @id @default(cuid())
    firstName   String
    lastName    String
    email       String? @unique // TODO: change this to non-option
    phoneNumber String  @unique
    person      Person? @relation(fields: [personId], references: [id])
    personId    String? @unique
}

model Person {
    id         String       @id @default(cuid())
    family     Family?      @relation(fields: [familyId], references: [id])
    familyId   String?
    contact    Contact?
    userName   String
    lastLogin  DateTime?
    enrollment Enrollment[]
    section    Section[]
    createdAt  DateTime     @default(now())
    updatedAt  DateTime     @updatedAt
}

model Enrollment {
    id        String            @id @default(cuid())
    person    Person            @relation(fields: [personId], references: [id])
    personId  String
    section   Section           @relation(fields: [sectionId], references: [id])
    sectionId String
    startDate DateTime
    endDate   DateTime
    status    ENROLLMENT_STATUS
    createdAt DateTime          @default(now())
    updatedAt DateTime          @updatedAt
}

model Section {
    id         String       @id @default(cuid())
    teacher    Person       @relation(fields: [teacherId], references: [id])
    teacherId  String
    course     COURSE
    semester   String
    weekday    WEEKDAY
    startTime  DateTime
    enrollment Enrollment[]
}

model Family {
    id        String   @id @default(cuid())
    people    Person[]
    doorCode  String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model SMSMessage {
    id        String   @id @default(cuid())
    from      String
    to        String
    body      String
    mediaUrls String[]
    status    Status
    errorCode Int?
    date      DateTime @default(now())
}

model EmailMessage {
    id          String   @id @default(cuid())
    from        String
    to          String[]
    subject     String
    body        String
    cc          String[]
    bcc         String[]
    attachments String[] // TODO: Decide if we should add attachments
    status      Status
    errorCode   Int?
    date        DateTime @default(now())
}

model FutureSMSMessage {
    id        String   @id @default(cuid())
    from      String
    to        String
    body      String
    mediaUrls String[]
    status    Status

    days WEEKDAY[] // If it is a recurring messages
    date DateTime? // If it is a one time messages
}

model FutureEmailMessage {
    id          String   @id @default(cuid())
    from        String
    to          String[]
    subject     String
    body        String
    cc          String[]
    bcc         String[]
    attachments String[] // TODO: Decide if we should add attachments
    status      Status

    days WEEKDAY[] // If it is a recurring messages
    date DateTime? // If it is a one time messages
}
